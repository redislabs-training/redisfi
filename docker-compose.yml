
services:
  frontend-pull:
    env_file: .env
    image: timeartist/redisfi
    command:  poetry run redisfi web server
    pull_policy: always
    container_name: frontend
    ports:
      - 8000:8000
    profiles:
      - pull
  bridge-pull:
    env_file: .env
    image: timeartist/redisfi
    command: poetry run redisfi bridge up ${ALPACA_KEY} ${ALPACA_SECRET}
    container_name: bridge
    pull_policy: always
    profiles:
      - pull
  vss-wsapi-pull:
    env_file: .env
    image: timeartist/redisfi-vss
    command: poetry run VSS run
    container_name: vss-wsapi
    pull_policy: always
    ports:
     - 7777:7777
    profiles:
      - pull
  vss-loader-pull:
    env_file: .env
    image: timeartist/redisfi-vss
    command: poetry run VSS load -n
    container_name: vss-loader
    pull_policy: always
    volumes:
      - /tmp/redisfi_work_dir:/tmp:rw
    profiles:
      - pull
  frontend-build:
    env_file: .env
    build: .
    command: poetry run redisfi web server
    container_name: frontend
    ports:
      - 8000:8000
    profiles:
      - build
  bridge-build:
    env_file: .env
    build: .
    command: poetry run redisfi bridge up ${ALPACA_KEY} ${ALPACA_SECRET}
    container_name: bridge
    profiles:
      - build
  vss-build:
    env_file: .env
    build: ../redisfi-vss
    command: poetry run VSS run
    container_name: vss-wsapi
    ports:
     - 7777:7777
    profiles:
      - build
  vss-loader-build:
    env_file: .env
    build: ../redisfi-vss
    command: poetry run VSS load -n
    container_name: vss-loader
    pull_policy: always
    volumes:
      - /tmp/redisfi_work_dir:/tmp:rw
    profiles:
      - build
  redis:
    image: redislabs/redisearch:2.4.3
    ports: 
     - 6379:6379
    profiles:
      - pull_redis
