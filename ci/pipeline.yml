resource_types:

  # - name: packer
  #   type: registry-image
  #   source:
  #     repository: technicalenablement/packer-with-plugins
  #     tag: latest
  - name: packer
    type: docker-image
    source:
      repository: mitodl/concourse-packer-resource
      tag: latest
resources:
  - name: redisfi
    type: git
    icon: github
    source:
      uri: https://github.com/redislabs-training/redisfi
      branch: main
      username: ((auth-github))
      password: x-oauth-basic
  - name: redisfi-vss
    type: git
    icon: github
    source:
      uri: https://github.com/redislabs-training/redisfi-vss
      branch: main
      username: ((auth-github))
      password: x-oauth-basic
  # - name: redis-enterprise
  #   icon: docker
  #   type: registry-image
  #   source:
  #     repository: redislabs/redis
  #     tag: latest
  - name: redisfi-oss-container
    type: registry-image
    icon: docker
    source:
      repository: technicalenablement/redisfi
      username: kurtfm
      password: ((auth-docker))
  - name: redisfi-ssl-base-container
    type: registry-image
    icon: docker
    source:
      repository: ((internal-repository-ssl-base))
      username: _json_key
      password: ((auth-gcp-te))
  - name: redisfi-app-base-container
    type: registry-image
    icon: docker
    source:
      repository: ((internal-repository-app-base))
      username: _json_key
      password: ((auth-gcp-te))
  - name: redisfi-vss-container
    type: registry-image
    icon: docker
    source:
      repository: technicalenablement/redisfi-vss
      username: kurtfm
      password: ((auth-docker))
  - name: build-gcp-image
    icon: google-cloud
    type: packer

  - name: every-friday
    type: time
    source:
      days: [Friday]

jobs: 
  - name: build-oss-container
    plan:
      - get: redisfi
        # trigger: true
      - task: build
        privileged: true
        file: redisfi/ci/build.yml
        params:
          CONTEXT: redisfi
          DOCKERFILE: redisfi/dockerfiles/local.dockerfile
      - put: redisfi-oss-container
        params:
          image: image/image.tar
          version: 99.99.99
          bump_aliases: true
  - name: build-ssl-base-container
    plan:
      - get: redisfi
      - get: every-friday
        trigger: true
      - task: build
        privileged: true
        file: redisfi/ci/build.yml
        params:
          CONTEXT: redisfi
          DOCKERFILE: redisfi/dockerfiles/ssl.dockerfile
          BUILD_ARG_GCP_AUTH: ((auth-gcp-sa))
          BUILD_ARG_NOTIFICATION_EMAIL: ((letsencrypt-email))
          BUILD_ARG_STAGING: ((letsencrypt-staging))
          BUILD_ARG_DOMAIN: ((base-domain))
      - put: redisfi-ssl-base-container
        params:
          image: image/image.tar
          version: 99.99.99
          bump_aliases: true
  - name: build-app-base-container
    plan:
      - get: redisfi-ssl-base-container
        trigger: true
        passed: [build-ssl-base-container]
        params:
          format: oci
      - get: redisfi
        trigger: true
      - task: build
        privileged: true
        file: redisfi/ci/build-from-ssl-base.yml
        params:
          CONTEXT: redisfi
          DOCKERFILE: redisfi/dockerfiles/app.dockerfile
          IMAGE_ARG_BASE: redisfi-ssl-base-container/image.tar
      - put: redisfi-app-base-container
        params:
          image: image/image.tar
          version: 99.99.99
          bump_aliases: true
  - name: build-vss-container
    plan:
      - get: redisfi-vss
        trigger: true
        params:
          format: oci
      - task: build
        privileged: true
        file: redisfi-vss/ci/build-vss.yml
      - put: redisfi-vss-container
        params:
          image: image/image.tar
          version: 99.99.99
          bump_aliases: true
  - name: build-gcp-images
    plan:
    - get: redisfi
    - get: every-friday
      trigger: true
    - task: service-account
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: busybox 
        outputs:
        - name: cred-files
        run:
          path: sh
          args:
          - -cx
          - |
            ls -l .
            echo '((auth-gcp-sa-b64))' | base64 -d > cred-files/gcp-service-account.json
    - put: build-gcp-image
      params:
        template: redisfi/packer/app.pkr.hcl
        objective: build
        vars:
          gcp_project: ((gcp-sa))
          gcp_credentials_file: cred-files/gcp-service-account.json
          auth_github: ((auth-github))
    - put: build-gcp-image
      params:
        template: redisfi/packer/cluster.pkr.hcl
        objective: build
        vars:
          gcp_project: ((gcp-sa))
          gcp_credentials_file: cred-files/gcp-service-account.json